name: Build JUCE Plugin

on:
  pull_request:
    branches:
      - production

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Visual Studio
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: 'x64'

      - name: Set up environment
        shell: powershell
        run: |
          # Decode the base64-encoded certificate and save it as a .pfx file
          $certContent = '${{ secrets.WINDOWS_CERTIFICATE }}'
          $certBytes = [System.Convert]::FromBase64String($certContent)
          [System.IO.File]::WriteAllBytes('viatordsp-cert.pfx', $certBytes)

      - name: Install Windows SDK
        run: |
          choco install windows-sdk-10.1

      - name: Install dependencies
        run: |
          choco install cmake

      - name: Clear CMake build directories
        run: |
          if (Test-Path Build) {
            Remove-Item Build -Recurse -Force
          }

      - name: Configure CMake
        run: |
          cmake -B Build -D CMAKE_BUILD_TYPE=Release -D CMAKE_GENERATOR_PLATFORM=x64

      - name: Build
        run: |
          cmake --build Build --config Release

      - name: Zip the folder
        run: |
          Compress-Archive -Path "Build\viator-monster-channel_artefacts\Release\VST3\viator-monster-channel.vst3" -DestinationPath "viator-monster-channel.zip"
        shell: pwsh

      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: installer.iss
          options: /O+

      - name: Sign the installer
        run: |
          $signtool = "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe"
          & $signtool sign /f "viatordsp-cert.pfx" /p "${{ secrets.P12_PASSWORD }}" /fd SHA256 /t "http://timestamp.digicert.com" /v "Output\viator-monster-channel-setup.exe"

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v3
        with:
          name: VST3-Installer
          path: Output\viator-monster-channel-setup.exe

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_INSTALLER_CERTIFICATE_BASE64: ${{ secrets.BUILD_INSTALLER_CERTIFICATE_BASE64 }}
          P12_INSTALLER_PASSWORD: ${{ secrets.P12_INSTALLER_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo "Decoding and installing application certificate"
          echo "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          echo "Creating application keychain..."
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          echo "Importing application certificate to keychain"
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH

          INSTALLER_CERTIFICATE_PATH=$RUNNER_TEMP/build_installer_certificate.p12
          INSTALLER_KEYCHAIN_PATH=$RUNNER_TEMP/app-signing-installer.keychain-db

          echo "Decoding and installing installer certificate..."
          echo "$BUILD_INSTALLER_CERTIFICATE_BASE64" | base64 --decode > $INSTALLER_CERTIFICATE_PATH

          echo "Creating installer keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" $INSTALLER_KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $INSTALLER_KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $INSTALLER_KEYCHAIN_PATH

          echo "Importing installer certificate to keychain"
          security import $INSTALLER_CERTIFICATE_PATH -P "$P12_INSTALLER_PASSWORD" -A -t cert -f pkcs12 -k $INSTALLER_KEYCHAIN_PATH

          echo "Setting keychain search list"
          security list-keychains -s $RUNNER_TEMP/app-signing.keychain-db $RUNNER_TEMP/app-signing-installer.keychain-db

          echo "Verifying application certificate"
          security find-identity -v -p basic $RUNNER_TEMP/app-signing.keychain-db

          echo "Verifying installer certificate"
          security find-identity -v -p basic $RUNNER_TEMP/app-signing-installer.keychain-db

      - name: Install dependencies
        run: |
          brew install cmake gtk+3

      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode_15.1.app

      - name: Clear CMake build directories
        run: |
          if [ -d Build ]; then
            rm -rf Build
          fi

      - name: Configure CMake
        run: cmake -B Build -D CMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"

      - name: Build
        run: cmake --build Build --config Release

      - name: Sign Mac Builds
        env:
          HASH_OF_DEVELOPER_ID_APPLICATION: ${{ secrets.HASH_OF_DEVELOPER_ID_APPLICATION }}
        run: |
          codesign --deep --force --options=runtime --sign "$HASH_OF_DEVELOPER_ID_APPLICATION" --timestamp Build/viator-monster-channel_artefacts/Release/AU/viator-monster-channel.component  || exit 1
          codesign --deep --force --options=runtime --sign "$HASH_OF_DEVELOPER_ID_APPLICATION" --timestamp Build/viator-monster-channel_artefacts/Release/VST3/viator-monster-channel.vst3  || exit 1

      - name: Create Installer Mac AU
        run: |
          pkgbuild --root Build/viator-monster-channel_artefacts/Release/AU \
          --identifier com.viator-dsp.viator-monster-channel \
          --install-location Build/viator-monster-channel_artefacts/Release/AU \
          --version "1.0.0" \
          viator-monster-channel-au.pkg

      - name: Create Installer Mac VST3
        run: |
          pkgbuild --root Build/viator-monster-channel_artefacts/Release/VST3 \
          --identifier com.viator-dsp.viator-monster-channel \
          --install-location Build/viator-monster-channel_artefacts/Release/VST3 \
          --version "1.0.0" \
          viator-monster-channel-vst3.pkg

      - name: Sign the Installer Packages
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
        run: |
          security list-keychains
          security find-identity -v -p basic $INSTALLER_KEYCHAIN_PATH
          # Use the correct identity from the installer certificate to sign the package
          xcrun notarytool store-credentials "notarytool-password" --apple-id "$APPLE_ID" --team-id "$TEAM_ID" --password "$APP_PASSWORD"
          productsign --sign "Developer ID Installer: landon viator (NM5H2TB5A6)" viator-monster-channel-au.pkg viator-monster-channel-au-signed.pkg
          productsign --sign "Developer ID Installer: landon viator (NM5H2TB5A6)" viator-monster-channel-vst3.pkg viator-monster-channel-vst3-signed.pkg
          xcrun notarytool submit viator-monster-channel-au-signed.pkg --keychain-profile "notarytool-password" --wait
          xcrun notarytool submit viator-monster-channel-vst3-signed.pkg --keychain-profile "notarytool-password" --wait

      - name: Upload AU Installer
        uses: actions/upload-artifact@v3
        with:
          name: Mac-Installer-AU
          path: viator-monster-channel-au-signed.pkg

      - name: Upload VST3 Installer
        uses: actions/upload-artifact@v3
        with:
          name: Mac-Installer-VST3
          path: viator-monster-channel-vst3-signed.pkg

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgtk-3-dev libwebkit2gtk-4.0-dev
          sudo apt-get install -y libasound2-dev

      - name: Clear CMake build directories
        run: |
          if [ -d Build ]; then
            rm -rf Build
          fi

      - name: Configure CMake
        run: cmake -B Build -D CMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build Build --config Release

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: Build/viator-monster-channel_artefacts/Release/
